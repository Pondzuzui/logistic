<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>‡πÄ‡∏õ‡∏¥‡∏î‡∏ö‡∏¥‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</title>
    <style>
/* General Styles */
/* Body */
body {
    font-family: 'Sarabun', sans-serif;
    background: linear-gradient(to right, #2c3e50, #597496);
    margin: 0;
    padding: 20px;
    display: flex;
    justify-content: center;
    align-items: flex-start;
    min-height: 100vh;
}

/* ‡∏Å‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏≠‡∏ö‡∏ü‡∏≠‡∏£‡πå‡∏° */
.container {
    background: #ffffff;
    padding: 20px;
    border-radius: 10px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    width: 90%;
    max-width: 1000px; /* ‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏ß‡πâ‡∏≤‡∏á‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î */
    text-align: left;
}

/* Header */
.header h3 {
    font-size: 24px;
    color: #333;
    margin-bottom: 20px;
    text-align: center;
}

/* Label */
label {
    font-size: 16px;
    font-weight: 600;
    margin-bottom: 8px;
    display: block;
}

/* Input Fields */
input[type="text"], input[type="number"], input[type="date"], input[type="hidden"] {
    width: 95%;
    padding: 10px;
    margin-bottom: 15px;
    background: #f0f4f8;
    border: 1px solid #333;
    border-radius: 4px;
    font-size: 14px;
}

/* Table Styles */
.table {
    width: 100%;
    margin-top: 20px;
    border-collapse: collapse;
}

.table th, .table td {
    padding: 12px;
    text-align: center;
    border: 1px solid #ddd;
}

.table th {
    background-color: #f0f4f8;
}

/* Buttons */
button {
    padding: 10px 20px;
    font-size: 16px;
    border-radius: 4px;
    cursor: pointer;
    border: none;
}

.btn-search {
    background-color: #4CAF50;
    color: #fff;
}

.btn-search:hover {
    background-color: #45a049;
}

.btn-danger {
    background-color: #f44336;
    color: white;
}

.btn-danger:hover {
    background-color: #e53935;
}

.btn-success {
    background-color: #4CAF50;
    color: white;
}

.btn-success:hover {
    background-color: #45a049;
}

/* Google Maps iframe */
#mapFrame {
    border: 0;
    border-radius: 8px;
    width: 100%;
    height: 300px;
}

/* Checkbox Styles */
input[type="checkbox"] {
    margin-right: 10px;
}

/* Table Input Fields */
.form-control1 {
    width: 100%;
    padding: 8px;
    border-radius: 4px;
    border: 1px solid #ddd;
}

/* Additional Styles */
.mb-3 {
    margin-bottom: 20px;
}

.text-dark {
    color: #333;
}
/* ‡∏õ‡∏£‡∏±‡∏ö‡πÉ‡∏´‡πâ label, input ‡πÅ‡∏•‡∏∞‡∏õ‡∏∏‡πà‡∏°‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô */
.lat-long-container {
    display: flex;
    align-items: center;
    gap: 10px; /* ‡∏£‡∏∞‡∏¢‡∏∞‡∏´‡πà‡∏≤‡∏á‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á input ‡πÅ‡∏•‡∏∞‡∏õ‡∏∏‡πà‡∏° */
}

/* ‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î input ‡πÉ‡∏´‡πâ‡∏û‡∏≠‡∏î‡∏µ‡∏Å‡∏±‡∏ö‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà */
.lat-long-container input {
    flex: 1; /* ‡πÉ‡∏´‡πâ input ‡∏¢‡∏∑‡∏î‡∏ï‡∏≤‡∏°‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠ */
    padding: 10px;
    border: 1px solid #333;
    border-radius: 4px;
}

/* ‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î‡∏õ‡∏∏‡πà‡∏°‡πÉ‡∏´‡πâ‡πÑ‡∏°‡πà‡∏Å‡∏¥‡∏ô‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ */
.lat-long-container .btn-custom {
    white-space: nowrap; /* ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ç‡∏∂‡πâ‡∏ô‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡πÉ‡∏´‡∏°‡πà */
    padding: 10px 15px;
}
.btn-custom{
    background-color: #f39c12;
    color: #fff;
}
.btn-custom:hover {
    background-color: #e67e22;
}
.btn-custom:hover{
            background-color: #e74c3c;
            color: white;
            box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.2);
        }
/* ‡∏õ‡∏£‡∏±‡∏ö‡∏ä‡πà‡∏≠‡∏á‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á */
.form-control1 {
    width: 100%;
    padding: 8px;
    border-radius: 5px;
    border: 1px solid #ccc;
    font-size: 14px;
    text-align: center;
    background: #f9f9f9; /* ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á‡πÉ‡∏´‡πâ‡∏≠‡πà‡∏≠‡∏ô‡∏Ç‡∏∂‡πâ‡∏ô */
    transition: all 0.3s ease;
}

/* ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏µ‡πÄ‡∏™‡πâ‡∏ô‡∏Ç‡∏≠‡∏ö‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÇ‡∏ü‡∏Å‡∏±‡∏™ */
.form-control1:focus {
    border-color: #4CAF50;
    box-shadow: 0 0 5px rgba(76, 175, 80, 0.5);
    background: #fff;
}
/* ‡∏à‡∏±‡∏î‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á checkbox ‡πÅ‡∏•‡∏∞‡∏õ‡∏∏‡πà‡∏°‡πÉ‡∏´‡πâ‡∏≠‡∏¢‡∏π‡πà‡∏ä‡∏¥‡∏î‡∏Ç‡∏ß‡∏≤ */
.checkbox-container {
    display: flex;
    align-items: center;
    justify-content: flex-end; /* ‡∏ä‡∏¥‡∏î‡∏Ç‡∏ß‡∏≤ */
    gap: 15px; /* ‡∏£‡∏∞‡∏¢‡∏∞‡∏´‡πà‡∏≤‡∏á‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á checkbox ‡∏Å‡∏±‡∏ö‡∏õ‡∏∏‡πà‡∏° */
    margin-top: 10px;
}

/* ‡∏õ‡∏£‡∏±‡∏ö‡∏£‡∏∞‡∏¢‡∏∞‡∏´‡πà‡∏≤‡∏á‡∏Ç‡∏≠‡∏á checkbox */
.checkbox-container label {
    display: flex;
    align-items: center;
    font-size: 16px;
}

.insert-btn {
    background-color: #2196F3; /* ‡∏™‡∏µ‡∏ü‡πâ‡∏≤ */
    color: white; /* ‡∏™‡∏µ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° */
    border: none;
}

.insert-btn:hover {
    background-color: #1976D2; /* ‡∏™‡∏µ‡∏ü‡πâ‡∏≤‡πÄ‡∏Ç‡πâ‡∏°‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÇ‡∏Æ‡πÄ‡∏ß‡∏≠‡∏£‡πå */
}
/* ‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î‡πÅ‡∏•‡∏∞‡∏™‡πÑ‡∏ï‡∏•‡πå‡∏Ç‡∏≠‡∏á‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° */
textarea {
    width: 95%;
    padding: 10px;
    border: 1px solid #060505;
    border-radius: 4px;
    font-size: 14px;
    resize: vertical; /* ‡πÉ‡∏´‡πâ‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î‡∏™‡∏π‡∏á-‡∏ï‡πà‡∏≥‡πÑ‡∏î‡πâ */
    min-height: 100px;
}
/* ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏µ‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ç‡∏≠‡∏á‡∏´‡∏±‡∏ß‡∏ï‡∏≤‡∏£‡∏≤‡∏á */
.table thead th {
    background: linear-gradient(to right, #2c3e50, #4b6584);
    color: white; /* ‡∏™‡∏µ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£ */
    font-size: 16px;
    padding: 10px;
    text-align: center;
}
/* ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏Ç‡∏ô‡∏≤‡∏î‡πÅ‡∏•‡∏∞‡∏™‡∏µ‡∏Ç‡∏≠‡∏á‡∏õ‡∏∏‡πà‡∏° "‡πÄ‡∏õ‡∏¥‡∏î‡∏ö‡∏¥‡∏•" */
#submitBill {
    background-color: #28a745; /* ‡∏™‡∏µ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß */
    color: white; /* ‡∏™‡∏µ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° */
    padding: 15px 300px; /* ‡∏Ç‡∏ô‡∏≤‡∏î‡∏Ç‡∏≠‡∏á‡∏õ‡∏∏‡πà‡∏° */
    font-size: 18px; /* ‡∏Ç‡∏ô‡∏≤‡∏î‡∏ü‡∏≠‡∏ô‡∏ï‡πå */
    border-radius: 5px; /* ‡∏°‡∏∏‡∏°‡∏õ‡∏∏‡πà‡∏°‡πÇ‡∏Ñ‡πâ‡∏á */
    border: none; /* ‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡∏Ç‡∏≠‡∏ö */
    cursor: pointer;
    margin-left: 15%;
    margin-top:10px ;
}


/* ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÇ‡∏Æ‡πÄ‡∏ß‡∏≠‡∏£‡πå (‡πÄ‡∏≠‡∏≤‡πÄ‡∏°‡∏≤‡∏™‡πå‡πÑ‡∏õ‡∏ß‡∏≤‡∏á) ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏µ */
#submitBill:hover {
    background-color: #218838; /* ‡∏™‡∏µ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß‡πÄ‡∏Ç‡πâ‡∏° */
}


    </style>
</head>
<body>
    <div class="container">
    <div class="header">
        <h3 class="text-dark">üîπ ‡πÄ‡∏õ‡∏¥‡∏î‡∏ö‡∏¥‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ üîπ</h3>
    <div class="mb-3">
        <label class="form-label">‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà SO :</label>
        <form id="soSearchForm">
            <div style="display: flex; justify-content: space-between;">
                <input type="text" class="form-control" id="so_number" name="so_number" style="width: 83%;" required>
                <button type="submit" class="btn-search" style="width: 14%; height: 45px;">üîç ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤</button>
            </div>
        </form>
    </div>

    <form id="billForm">

        <input type="hidden" name="so_id" id="so_id" value="">

        <label>‡∏ú‡∏π‡πâ‡πÄ‡∏õ‡∏¥‡∏î‡∏ö‡∏¥‡∏• :</label>
        <input type="text" id="emp_name" name="emp_name" value="{{ session('emp_name', 'Guest') }}">        

            <label>‡∏£‡∏´‡∏±‡∏™‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤ :</label>
            <input type="text" id="customer_id" name="customer_id" readonly>

            <label>‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó :</label>
            <input type="text" id="customer_name" name="customer_name" readonly>

            <label>‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠ :</label>
            <input type="text" id="customer_tel" name="customer_tel" >

            <label>‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏à‡∏±‡∏î‡∏™‡πà‡∏á :</label>
            <input type="text" id="customer_address" name="customer_address" >
            <label >‡∏•‡∏∞‡∏ï‡∏¥‡∏à‡∏π‡∏î ‡∏•‡∏≠‡∏á‡∏à‡∏¥‡∏à‡∏π‡∏î :</label>
            <div class="lat-long-container">
                <input type="text" id="customer_la_long" name="customer_la_long">
                <button type="button" class="btn-custom" onclick="openGoogleMaps()">Google Maps</button>
            </div>
        </div>

        <div class="mb-3">
            <label class="form-label">‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà :</label>
            <iframe id="mapFrame" width="100%" height="300" style="border:0;" allowfullscreen="" loading="lazy"></iframe>
        </div>
        {{-- map --}}
        <script>
            function updateMap() {
                let coords = document.getElementById('customer_la_long').value;
                if (coords) {
                    document.getElementById('mapFrame').src = `https://www.google.com/maps?q=${coords}&output=embed`;
                }
            }
            document.getElementById('customer_la_long').addEventListener('input', updateMap);
            updateMap();
        </script>
            <label>‡∏ß‡∏±‡∏ô‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏™‡πà‡∏á</label>
            <input type="text" id="date_of_dali" name="date_of_dali" readonly>
            
        
                        <table class="table table-bordered table-striped">
                            <thead>
                            <tr>
                                <th>‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏î‡∏™‡πà‡∏á</th>
                                <th>‡∏£‡∏´‡∏±‡∏™‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</th>
                                <th>‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</th>
                                <th>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô</th>
                                <th>‡∏£‡∏≤‡∏Ñ‡∏≤/‡∏´‡∏ô‡πà‡∏ß‡∏¢</th>
                                <th>‡∏•‡∏ö</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr> 
                                <td><input type="checkbox" class="form-control1" name="status[]"></td>
                                <td><input type="text" class="form-control1" name="item_id[]"></td>
                                <td><input type="text" class="form-control1" name="item_name[]" ></td>
                                <td>
                                    <input type="number" class="form-control1 item_quantity" name="item_quantity[]" >
                                </td>
                                <td>
                                    <input type="number" class="form-control1 item_unit_price" name="item_unit_price[]" >
                                </td>
                                <td><button type="button" class="btn btn-danger delete-btn">‡∏•‡∏ö</button></td>
                            </tr>
                        </tbody>
                        </table>
                        <div class="checkbox-container">
                            <label>
                                <input type="checkbox" name="checkall"> ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
                            </label>
                            <button type="button" class="btn btn-danger insert-btn">‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</button>
                        </div>
                        

                        
                        <label for="additional_notes">‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°</label>
                        <textarea id="additional_notes" name="additional_notes" rows="4"></textarea>
                        

            <button type="button" id="submitBill" class="btn btn-success"> ‡πÄ‡∏õ‡∏¥‡∏î‡∏ö‡∏¥‡∏•</button>

    </form>
</div>


    {{-- function --}}
    <script>
                document.getElementById('submitBill').addEventListener('click', async function (event) {
                event.preventDefault();

                let formData = new FormData(document.getElementById('billForm'));

                // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 1 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ñ‡∏π‡∏Å‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
                let hasSelectedItems = false;
                document.querySelectorAll('input[name="status[]"]:checked').forEach((checkbox) => {
                    hasSelectedItems = true;
                });

                if (!hasSelectedItems) {
                    alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 1 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£");
                    return;
                }

                // ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏∏‡∏Å‡∏ï‡∏±‡∏ß‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á
                let itemRows = document.querySelectorAll('table tbody tr');
                itemRows.forEach((row, index) => {
                    let itemId = row.querySelector('input[name="item_id[]"]').value;
                    let itemName = row.querySelector('input[name="item_name[]"]').value;
                    let itemQuantity = row.querySelector('input[name="item_quantity[]"]').value;
                    let itemUnitPrice = row.querySelector('input[name="item_unit_price[]"]').value;
                    let itemStatus = row.querySelector('input[name="status[]"]').checked ? 1 : 0;

                    // ‡πÄ‡∏Å‡πá‡∏ö‡∏Ñ‡πà‡∏≤‡∏•‡∏á‡πÉ‡∏ô FormData
                    formData.append(`item_id[${index}]`, itemId);
                    formData.append(`item_name[${index}]`, itemName);
                    formData.append(`item_quantity[${index}]`, itemQuantity);
                    formData.append(`item_unit_price[${index}]`, itemUnitPrice);
                    formData.append(`status[${index}]`, itemStatus);
                });

                // ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏õ‡∏¢‡∏±‡∏á Controller Laravel
                try {
                    let response = await fetch('{{ route("insert.post") }}', {
                        method: 'POST',
                        body: formData,
                        headers: {
                            'X-CSRF-TOKEN': '{{ csrf_token() }}',
                        },
                    });

                    let data = await response.json();
                    if (data.success) {
                        alert(data.success);
                        window.location.href = '/dashboard';
                    } else if (data.error) {
                        alert(data.error);
                    }
                } catch (error) {
                    console.error('Error:', error);
                    alert('‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•');
                }
            });
    </script>

    {{-- function --}}
    <script>
                const selectAllCheckbox = document.querySelector('input[name="checkall"]');
                if (selectAllCheckbox) {
                    selectAllCheckbox.addEventListener('change', function() {
                        const checkboxes = document.querySelectorAll('input[type="checkbox"]:not([name="checkall"])');
                        checkboxes.forEach(checkbox => checkbox.checked = this.checked);
                    });
                }
        
                const tableBody = document.querySelector('table tbody');
                if (tableBody) {
                    tableBody.addEventListener('click', function(e) {
                        if (e.target.classList.contains('delete-btn')) {
                            var row = e.target.closest('tr');
                            row.remove();
                        }
                    });
                }
        
                const insertBtn = document.querySelector('.insert-btn');
                if (insertBtn) {
                    insertBtn.addEventListener('click', function() {
                        var newRow = document.createElement('tr');
                        newRow.innerHTML = `
                            <td><input type="checkbox" class="form-control1" name="status[]"></td>
                            <td><input type="text" class="form-control1" name="item_id[]"></td>
                            <td><input type="text" class="form-control1" name="item_name[]"></td>
                            <td>
                                <input type="number" class="form-control1 item_quantity" name="item_quantity[]" oninput="calculateTotal(this)">
                            </td>
                            <td>
                                <input type="number" class="form-control1 item_unit_price" name="item_unit_price[]" oninput="calculateTotal(this)">
                            </td>
                        
                            <td><button type="button" class="btn btn-danger delete-btn">‡∏•‡∏ö</button></td>
                        `;
                        tableBody.appendChild(newRow);
                    });
                    
                }
        
                    

        
            function openGoogleMaps() {
                const mapWindow = window.open(
                    "https://www.google.com/maps/@13.7563,100.5018,14z",
                    "Google Maps",
                    "width=800,height=600"
                );
            }
                function confirmSubmit(event) {
                event.preventDefault(); // ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£ submit ‡πÅ‡∏ö‡∏ö‡∏õ‡∏Å‡∏ï‡∏¥

                // ‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
                let confirmation = confirm("‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏¥‡∏î‡∏ö‡∏¥‡∏•‡πÉ‡∏ä‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?");

                if (confirmation) {
                // ‡∏´‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏Å‡∏î‡∏ï‡∏Å‡∏•‡∏á
                let formData = new FormData(document.getElementById('billForm')); // ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ü‡∏≠‡∏£‡πå‡∏°

                fetch('{{ route("insert.post") }}', { // ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á insert.post
                    method: 'POST',
                    body: formData,
                    headers: {
                        'X-CSRF-TOKEN': '{{ csrf_token() }}', // ‡∏™‡πà‡∏á CSRF Token
                    },
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        alert(data.success); // ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
                        window.location.href = '/dashboard'; // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏´‡∏ô‡πâ‡∏≤ dashboard
                    } else if (data.error) {
                        alert(data.error); // ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î
                    }
                })
                .catch((error) => {
                    console.error('Error:', error); // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Ñ‡∏≠‡∏ô‡πÇ‡∏ã‡∏•
                    alert('‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•');
                });

                } else {
                // ‡∏´‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏Å‡∏î‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å
                alert("‡∏Ñ‡∏∏‡∏ì‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏¥‡∏î‡∏ö‡∏¥‡∏•.");
                }
                }


    </script>






</body>
</html>
